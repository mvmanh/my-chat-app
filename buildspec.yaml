version: 0.2

env:
  variables:
    # Adjust these based on your project and ECR setup
    IMAGE_REPO_NAME: your-app-name
    IMAGE_TAG: latest  # Or use dynamic tagging based on commit hash

phases:
  install:
    runtime-versions:
      nodejs: 14
    commands:
      - echo Entered install phase...
      - npm install

  pre_build:
    commands:
      - echo Entered pre-build phase...
      # - echo Logging in to ECR...
      # - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com

  build:
    commands:
      - echo Entered build phase...
      - echo Build started on `date`
      # - mvn package
      - ls .
      # - echo Building Docker image...
      # - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      # - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG

  post_build:
    commands:
      - echo Entered post-build phase...
      - echo Build completed on `date`
      # - echo 'uploading file to bucket'
      # - aws s3 cp target/app-0.0.1-SNAPSHOT.jar s3://mvmanh/app.jar
      # - echo Pushing Docker image...
      # - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG

artifacts:
  base-directory: ./  # Set the base directory for artifact collection
  files:
    - '**/*'          # Include all files and folders
    - '!node_modules/**'  # Exclude the node_modules directory and its contents

cache:
  paths:
    - '/root/.m2/**/*'  # Cache Maven dependencies
